def sendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node {
echo "Job name is: ${env.JOB_NAME}"
echo  "Node name is: ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
def mavenhome = tool name: 'maven3.8.6'
try {
sendSlackNotification{'STARTED'}

//get the code from github repo
stage ('checkoutcode'){
git branch: 'development', credentialsId: 'dbf6960f-041a-4642-ad3e-fea10e312c02', url: 'https://github.com/Anilmb08/maven-web-application.git'
}

//do the build using maven tool
stage ('build')
sh "${mavenhome}/bin/mvn clean package"


//excute sonarqube reports
stage ('excutesonarqubereports'){
sh "${mavenhome}/bin/mvn sonar:sonar"
}

//upload artifacts into artifactory
stage('uploadartifactsintonexus'){
sh "${mavenhome}/bin/mvn deploy"
}

//deploy application into tomcat server
stage ('deployapplicationintotomcatserver'){
sshagent(['42c0ab26-2620-4f74-9d99-a5151718ec10']) {
  sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@52.53.156.87:/opt/apache-tomcat-9.0.64/webapps"
}
}

}//try closing
catch(e){
	currentBuild.result = "FAILED"
	}finally {
   sendSlackNotification(currentBuild.result)
  }
  }//node closing 

